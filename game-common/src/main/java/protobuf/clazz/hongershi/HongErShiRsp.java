// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hongershi/hongershiProto.proto

package protobuf.clazz.hongershi;

public final class HongErShiRsp {
  private HongErShiRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface Operate_Card_HongErShiOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 type = 7;
    /**
     * <code>optional int32 type = 7;</code>
     *
     * <pre>
     * 操作子类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 7;</code>
     *
     * <pre>
     * 操作子类型
     * </pre>
     */
    int getType();

    // optional int32 seat_index = 2;
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     * 操作玩家
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     * 操作玩家
     * </pre>
     */
    int getSeatIndex();

    // optional int32 operate_card = 3;
    /**
     * <code>optional int32 operate_card = 3;</code>
     *
     * <pre>
     * 操作卡牌
     * </pre>
     */
    boolean hasOperateCard();
    /**
     * <code>optional int32 operate_card = 3;</code>
     *
     * <pre>
     * 操作卡牌
     * </pre>
     */
    int getOperateCard();

    // optional int32 operate_code = 4;
    /**
     * <code>optional int32 operate_code = 4;</code>
     *
     * <pre>
     * 操作(吃、碰、杠)
     * </pre>
     */
    boolean hasOperateCode();
    /**
     * <code>optional int32 operate_code = 4;</code>
     *
     * <pre>
     * 操作(吃、碰、杠)
     * </pre>
     */
    int getOperateCode();

    // repeated int32 delete_cards = 5;
    /**
     * <code>repeated int32 delete_cards = 5;</code>
     *
     * <pre>
     * 要删除的手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getDeleteCardsList();
    /**
     * <code>repeated int32 delete_cards = 5;</code>
     *
     * <pre>
     * 要删除的手牌
     * </pre>
     */
    int getDeleteCardsCount();
    /**
     * <code>repeated int32 delete_cards = 5;</code>
     *
     * <pre>
     * 要删除的手牌
     * </pre>
     */
    int getDeleteCards(int index);

    // optional int32 delete_count = 6;
    /**
     * <code>optional int32 delete_count = 6;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    boolean hasDeleteCount();
    /**
     * <code>optional int32 delete_count = 6;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    int getDeleteCount();
  }
  /**
   * Protobuf type {@code hongershi.Operate_Card_HongErShi}
   */
  public static final class Operate_Card_HongErShi extends
      com.google.protobuf.GeneratedMessage
      implements Operate_Card_HongErShiOrBuilder {
    // Use Operate_Card_HongErShi.newBuilder() to construct.
    private Operate_Card_HongErShi(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Operate_Card_HongErShi(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Operate_Card_HongErShi defaultInstance;
    public static Operate_Card_HongErShi getDefaultInstance() {
      return defaultInstance;
    }

    public Operate_Card_HongErShi getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Operate_Card_HongErShi(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatIndex_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              operateCard_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              operateCode_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                deleteCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              deleteCards_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                deleteCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                deleteCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              deleteCount_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          deleteCards_ = java.util.Collections.unmodifiableList(deleteCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.hongershi.HongErShiRsp.internal_static_hongershi_Operate_Card_HongErShi_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.hongershi.HongErShiRsp.internal_static_hongershi_Operate_Card_HongErShi_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi.class, protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi.Builder.class);
    }

    public static com.google.protobuf.Parser<Operate_Card_HongErShi> PARSER =
        new com.google.protobuf.AbstractParser<Operate_Card_HongErShi>() {
      public Operate_Card_HongErShi parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Operate_Card_HongErShi(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Operate_Card_HongErShi> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 type = 7;
    public static final int TYPE_FIELD_NUMBER = 7;
    private int type_;
    /**
     * <code>optional int32 type = 7;</code>
     *
     * <pre>
     * 操作子类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 type = 7;</code>
     *
     * <pre>
     * 操作子类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional int32 seat_index = 2;
    public static final int SEAT_INDEX_FIELD_NUMBER = 2;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     * 操作玩家
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     * 操作玩家
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional int32 operate_card = 3;
    public static final int OPERATE_CARD_FIELD_NUMBER = 3;
    private int operateCard_;
    /**
     * <code>optional int32 operate_card = 3;</code>
     *
     * <pre>
     * 操作卡牌
     * </pre>
     */
    public boolean hasOperateCard() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 operate_card = 3;</code>
     *
     * <pre>
     * 操作卡牌
     * </pre>
     */
    public int getOperateCard() {
      return operateCard_;
    }

    // optional int32 operate_code = 4;
    public static final int OPERATE_CODE_FIELD_NUMBER = 4;
    private int operateCode_;
    /**
     * <code>optional int32 operate_code = 4;</code>
     *
     * <pre>
     * 操作(吃、碰、杠)
     * </pre>
     */
    public boolean hasOperateCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 operate_code = 4;</code>
     *
     * <pre>
     * 操作(吃、碰、杠)
     * </pre>
     */
    public int getOperateCode() {
      return operateCode_;
    }

    // repeated int32 delete_cards = 5;
    public static final int DELETE_CARDS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> deleteCards_;
    /**
     * <code>repeated int32 delete_cards = 5;</code>
     *
     * <pre>
     * 要删除的手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDeleteCardsList() {
      return deleteCards_;
    }
    /**
     * <code>repeated int32 delete_cards = 5;</code>
     *
     * <pre>
     * 要删除的手牌
     * </pre>
     */
    public int getDeleteCardsCount() {
      return deleteCards_.size();
    }
    /**
     * <code>repeated int32 delete_cards = 5;</code>
     *
     * <pre>
     * 要删除的手牌
     * </pre>
     */
    public int getDeleteCards(int index) {
      return deleteCards_.get(index);
    }

    // optional int32 delete_count = 6;
    public static final int DELETE_COUNT_FIELD_NUMBER = 6;
    private int deleteCount_;
    /**
     * <code>optional int32 delete_count = 6;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    public boolean hasDeleteCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 delete_count = 6;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    public int getDeleteCount() {
      return deleteCount_;
    }

    private void initFields() {
      type_ = 0;
      seatIndex_ = 0;
      operateCard_ = 0;
      operateCode_ = 0;
      deleteCards_ = java.util.Collections.emptyList();
      deleteCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, operateCard_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, operateCode_);
      }
      for (int i = 0; i < deleteCards_.size(); i++) {
        output.writeInt32(5, deleteCards_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, deleteCount_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(7, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, operateCard_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, operateCode_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < deleteCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(deleteCards_.get(i));
        }
        size += dataSize;
        size += 1 * getDeleteCardsList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, deleteCount_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hongershi.Operate_Card_HongErShi}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShiOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.hongershi.HongErShiRsp.internal_static_hongershi_Operate_Card_HongErShi_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.hongershi.HongErShiRsp.internal_static_hongershi_Operate_Card_HongErShi_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi.class, protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi.Builder.class);
      }

      // Construct using protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        operateCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        operateCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        deleteCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        deleteCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.hongershi.HongErShiRsp.internal_static_hongershi_Operate_Card_HongErShi_descriptor;
      }

      public protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi getDefaultInstanceForType() {
        return protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi.getDefaultInstance();
      }

      public protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi build() {
        protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi buildPartial() {
        protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi result = new protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.operateCard_ = operateCard_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.operateCode_ = operateCode_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          deleteCards_ = java.util.Collections.unmodifiableList(deleteCards_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.deleteCards_ = deleteCards_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.deleteCount_ = deleteCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi) {
          return mergeFrom((protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi other) {
        if (other == protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasOperateCard()) {
          setOperateCard(other.getOperateCard());
        }
        if (other.hasOperateCode()) {
          setOperateCode(other.getOperateCode());
        }
        if (!other.deleteCards_.isEmpty()) {
          if (deleteCards_.isEmpty()) {
            deleteCards_ = other.deleteCards_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureDeleteCardsIsMutable();
            deleteCards_.addAll(other.deleteCards_);
          }
          onChanged();
        }
        if (other.hasDeleteCount()) {
          setDeleteCount(other.getDeleteCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.hongershi.HongErShiRsp.Operate_Card_HongErShi) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 type = 7;
      private int type_ ;
      /**
       * <code>optional int32 type = 7;</code>
       *
       * <pre>
       * 操作子类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 type = 7;</code>
       *
       * <pre>
       * 操作子类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 7;</code>
       *
       * <pre>
       * 操作子类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 7;</code>
       *
       * <pre>
       * 操作子类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 2;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       * 操作玩家
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       * 操作玩家
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       * 操作玩家
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000002;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       * 操作玩家
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 operate_card = 3;
      private int operateCard_ ;
      /**
       * <code>optional int32 operate_card = 3;</code>
       *
       * <pre>
       * 操作卡牌
       * </pre>
       */
      public boolean hasOperateCard() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 operate_card = 3;</code>
       *
       * <pre>
       * 操作卡牌
       * </pre>
       */
      public int getOperateCard() {
        return operateCard_;
      }
      /**
       * <code>optional int32 operate_card = 3;</code>
       *
       * <pre>
       * 操作卡牌
       * </pre>
       */
      public Builder setOperateCard(int value) {
        bitField0_ |= 0x00000004;
        operateCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 operate_card = 3;</code>
       *
       * <pre>
       * 操作卡牌
       * </pre>
       */
      public Builder clearOperateCard() {
        bitField0_ = (bitField0_ & ~0x00000004);
        operateCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 operate_code = 4;
      private int operateCode_ ;
      /**
       * <code>optional int32 operate_code = 4;</code>
       *
       * <pre>
       * 操作(吃、碰、杠)
       * </pre>
       */
      public boolean hasOperateCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 operate_code = 4;</code>
       *
       * <pre>
       * 操作(吃、碰、杠)
       * </pre>
       */
      public int getOperateCode() {
        return operateCode_;
      }
      /**
       * <code>optional int32 operate_code = 4;</code>
       *
       * <pre>
       * 操作(吃、碰、杠)
       * </pre>
       */
      public Builder setOperateCode(int value) {
        bitField0_ |= 0x00000008;
        operateCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 operate_code = 4;</code>
       *
       * <pre>
       * 操作(吃、碰、杠)
       * </pre>
       */
      public Builder clearOperateCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        operateCode_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 delete_cards = 5;
      private java.util.List<java.lang.Integer> deleteCards_ = java.util.Collections.emptyList();
      private void ensureDeleteCardsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          deleteCards_ = new java.util.ArrayList<java.lang.Integer>(deleteCards_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 delete_cards = 5;</code>
       *
       * <pre>
       * 要删除的手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDeleteCardsList() {
        return java.util.Collections.unmodifiableList(deleteCards_);
      }
      /**
       * <code>repeated int32 delete_cards = 5;</code>
       *
       * <pre>
       * 要删除的手牌
       * </pre>
       */
      public int getDeleteCardsCount() {
        return deleteCards_.size();
      }
      /**
       * <code>repeated int32 delete_cards = 5;</code>
       *
       * <pre>
       * 要删除的手牌
       * </pre>
       */
      public int getDeleteCards(int index) {
        return deleteCards_.get(index);
      }
      /**
       * <code>repeated int32 delete_cards = 5;</code>
       *
       * <pre>
       * 要删除的手牌
       * </pre>
       */
      public Builder setDeleteCards(
          int index, int value) {
        ensureDeleteCardsIsMutable();
        deleteCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delete_cards = 5;</code>
       *
       * <pre>
       * 要删除的手牌
       * </pre>
       */
      public Builder addDeleteCards(int value) {
        ensureDeleteCardsIsMutable();
        deleteCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delete_cards = 5;</code>
       *
       * <pre>
       * 要删除的手牌
       * </pre>
       */
      public Builder addAllDeleteCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDeleteCardsIsMutable();
        super.addAll(values, deleteCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delete_cards = 5;</code>
       *
       * <pre>
       * 要删除的手牌
       * </pre>
       */
      public Builder clearDeleteCards() {
        deleteCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional int32 delete_count = 6;
      private int deleteCount_ ;
      /**
       * <code>optional int32 delete_count = 6;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public boolean hasDeleteCount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 delete_count = 6;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public int getDeleteCount() {
        return deleteCount_;
      }
      /**
       * <code>optional int32 delete_count = 6;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public Builder setDeleteCount(int value) {
        bitField0_ |= 0x00000020;
        deleteCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 delete_count = 6;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public Builder clearDeleteCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        deleteCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:hongershi.Operate_Card_HongErShi)
    }

    static {
      defaultInstance = new Operate_Card_HongErShi(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:hongershi.Operate_Card_HongErShi)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hongershi_Operate_Card_HongErShi_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hongershi_Operate_Card_HongErShi_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036hongershi/hongershiProto.proto\022\thonger" +
      "shi\032\024basic/protocol.proto\"\222\001\n\026Operate_Ca" +
      "rd_HongErShi\022\014\n\004type\030\007 \001(\005\022\022\n\nseat_index" +
      "\030\002 \001(\005\022\024\n\014operate_card\030\003 \001(\005\022\024\n\014operate_" +
      "code\030\004 \001(\005\022\024\n\014delete_cards\030\005 \003(\005\022\024\n\014dele" +
      "te_count\030\006 \001(\005B(\n\030protobuf.clazz.hongers" +
      "hiB\014HongErShiRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_hongershi_Operate_Card_HongErShi_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_hongershi_Operate_Card_HongErShi_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hongershi_Operate_Card_HongErShi_descriptor,
              new java.lang.String[] { "Type", "SeatIndex", "OperateCard", "OperateCode", "DeleteCards", "DeleteCount", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
