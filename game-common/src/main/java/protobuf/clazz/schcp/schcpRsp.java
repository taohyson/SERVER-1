// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schcp/schcpProto.proto

package protobuf.clazz.schcp;

public final class schcpRsp {
  private schcpRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PlayerResultSchcpOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 player_score = 1;
    /**
     * <code>repeated int32 player_score = 1;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    java.util.List<java.lang.Integer> getPlayerScoreList();
    /**
     * <code>repeated int32 player_score = 1;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    int getPlayerScoreCount();
    /**
     * <code>repeated int32 player_score = 1;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    int getPlayerScore(int index);

    // repeated .Int32ArrayResponse score = 2;
    /**
     * <code>repeated .Int32ArrayResponse score = 2;</code>
     *
     * <pre>
     *每局用户的成绩
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getScoreList();
    /**
     * <code>repeated .Int32ArrayResponse score = 2;</code>
     *
     * <pre>
     *每局用户的成绩
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getScore(int index);
    /**
     * <code>repeated .Int32ArrayResponse score = 2;</code>
     *
     * <pre>
     *每局用户的成绩
     * </pre>
     */
    int getScoreCount();
    /**
     * <code>repeated .Int32ArrayResponse score = 2;</code>
     *
     * <pre>
     *每局用户的成绩
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getScoreOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse score = 2;</code>
     *
     * <pre>
     *每局用户的成绩
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getScoreOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code schcp.PlayerResultSchcp}
   *
   * <pre>
   *用户结束
   * </pre>
   */
  public static final class PlayerResultSchcp extends
      com.google.protobuf.GeneratedMessage
      implements PlayerResultSchcpOrBuilder {
    // Use PlayerResultSchcp.newBuilder() to construct.
    private PlayerResultSchcp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerResultSchcp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerResultSchcp defaultInstance;
    public static PlayerResultSchcp getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerResultSchcp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerResultSchcp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              playerScore_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                score_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              score_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          score_ = java.util.Collections.unmodifiableList(score_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.schcp.schcpRsp.internal_static_schcp_PlayerResultSchcp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.schcp.schcpRsp.internal_static_schcp_PlayerResultSchcp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.class, protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerResultSchcp> PARSER =
        new com.google.protobuf.AbstractParser<PlayerResultSchcp>() {
      public PlayerResultSchcp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerResultSchcp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerResultSchcp> getParserForType() {
      return PARSER;
    }

    // repeated int32 player_score = 1;
    public static final int PLAYER_SCORE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> playerScore_;
    /**
     * <code>repeated int32 player_score = 1;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPlayerScoreList() {
      return playerScore_;
    }
    /**
     * <code>repeated int32 player_score = 1;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    public int getPlayerScoreCount() {
      return playerScore_.size();
    }
    /**
     * <code>repeated int32 player_score = 1;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    public int getPlayerScore(int index) {
      return playerScore_.get(index);
    }

    // repeated .Int32ArrayResponse score = 2;
    public static final int SCORE_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> score_;
    /**
     * <code>repeated .Int32ArrayResponse score = 2;</code>
     *
     * <pre>
     *每局用户的成绩
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getScoreList() {
      return score_;
    }
    /**
     * <code>repeated .Int32ArrayResponse score = 2;</code>
     *
     * <pre>
     *每局用户的成绩
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getScoreOrBuilderList() {
      return score_;
    }
    /**
     * <code>repeated .Int32ArrayResponse score = 2;</code>
     *
     * <pre>
     *每局用户的成绩
     * </pre>
     */
    public int getScoreCount() {
      return score_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse score = 2;</code>
     *
     * <pre>
     *每局用户的成绩
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getScore(int index) {
      return score_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse score = 2;</code>
     *
     * <pre>
     *每局用户的成绩
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getScoreOrBuilder(
        int index) {
      return score_.get(index);
    }

    private void initFields() {
      playerScore_ = java.util.Collections.emptyList();
      score_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < playerScore_.size(); i++) {
        output.writeInt32(1, playerScore_.get(i));
      }
      for (int i = 0; i < score_.size(); i++) {
        output.writeMessage(2, score_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < playerScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playerScore_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerScoreList().size();
      }
      for (int i = 0; i < score_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, score_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code schcp.PlayerResultSchcp}
     *
     * <pre>
     *用户结束
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.schcp.schcpRsp.PlayerResultSchcpOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.schcp.schcpRsp.internal_static_schcp_PlayerResultSchcp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.schcp.schcpRsp.internal_static_schcp_PlayerResultSchcp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.class, protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.Builder.class);
      }

      // Construct using protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getScoreFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (scoreBuilder_ == null) {
          score_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          scoreBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.schcp.schcpRsp.internal_static_schcp_PlayerResultSchcp_descriptor;
      }

      public protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp getDefaultInstanceForType() {
        return protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.getDefaultInstance();
      }

      public protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp build() {
        protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp buildPartial() {
        protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp result = new protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.playerScore_ = playerScore_;
        if (scoreBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            score_ = java.util.Collections.unmodifiableList(score_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.score_ = score_;
        } else {
          result.score_ = scoreBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp) {
          return mergeFrom((protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp other) {
        if (other == protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.getDefaultInstance()) return this;
        if (!other.playerScore_.isEmpty()) {
          if (playerScore_.isEmpty()) {
            playerScore_ = other.playerScore_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePlayerScoreIsMutable();
            playerScore_.addAll(other.playerScore_);
          }
          onChanged();
        }
        if (scoreBuilder_ == null) {
          if (!other.score_.isEmpty()) {
            if (score_.isEmpty()) {
              score_ = other.score_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureScoreIsMutable();
              score_.addAll(other.score_);
            }
            onChanged();
          }
        } else {
          if (!other.score_.isEmpty()) {
            if (scoreBuilder_.isEmpty()) {
              scoreBuilder_.dispose();
              scoreBuilder_ = null;
              score_ = other.score_;
              bitField0_ = (bitField0_ & ~0x00000002);
              scoreBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getScoreFieldBuilder() : null;
            } else {
              scoreBuilder_.addAllMessages(other.score_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 player_score = 1;
      private java.util.List<java.lang.Integer> playerScore_ = java.util.Collections.emptyList();
      private void ensurePlayerScoreIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playerScore_ = new java.util.ArrayList<java.lang.Integer>(playerScore_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 player_score = 1;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPlayerScoreList() {
        return java.util.Collections.unmodifiableList(playerScore_);
      }
      /**
       * <code>repeated int32 player_score = 1;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public int getPlayerScoreCount() {
        return playerScore_.size();
      }
      /**
       * <code>repeated int32 player_score = 1;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public int getPlayerScore(int index) {
        return playerScore_.get(index);
      }
      /**
       * <code>repeated int32 player_score = 1;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder setPlayerScore(
          int index, int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 1;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder addPlayerScore(int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 1;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder addAllPlayerScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerScoreIsMutable();
        super.addAll(values, playerScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 1;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder clearPlayerScore() {
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse score = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> score_ =
        java.util.Collections.emptyList();
      private void ensureScoreIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          score_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(score_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> scoreBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getScoreList() {
        if (scoreBuilder_ == null) {
          return java.util.Collections.unmodifiableList(score_);
        } else {
          return scoreBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public int getScoreCount() {
        if (scoreBuilder_ == null) {
          return score_.size();
        } else {
          return scoreBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getScore(int index) {
        if (scoreBuilder_ == null) {
          return score_.get(index);
        } else {
          return scoreBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public Builder setScore(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (scoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoreIsMutable();
          score_.set(index, value);
          onChanged();
        } else {
          scoreBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public Builder setScore(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (scoreBuilder_ == null) {
          ensureScoreIsMutable();
          score_.set(index, builderForValue.build());
          onChanged();
        } else {
          scoreBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public Builder addScore(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (scoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoreIsMutable();
          score_.add(value);
          onChanged();
        } else {
          scoreBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public Builder addScore(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (scoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoreIsMutable();
          score_.add(index, value);
          onChanged();
        } else {
          scoreBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public Builder addScore(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (scoreBuilder_ == null) {
          ensureScoreIsMutable();
          score_.add(builderForValue.build());
          onChanged();
        } else {
          scoreBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public Builder addScore(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (scoreBuilder_ == null) {
          ensureScoreIsMutable();
          score_.add(index, builderForValue.build());
          onChanged();
        } else {
          scoreBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public Builder addAllScore(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (scoreBuilder_ == null) {
          ensureScoreIsMutable();
          super.addAll(values, score_);
          onChanged();
        } else {
          scoreBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public Builder clearScore() {
        if (scoreBuilder_ == null) {
          score_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          scoreBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public Builder removeScore(int index) {
        if (scoreBuilder_ == null) {
          ensureScoreIsMutable();
          score_.remove(index);
          onChanged();
        } else {
          scoreBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getScoreBuilder(
          int index) {
        return getScoreFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getScoreOrBuilder(
          int index) {
        if (scoreBuilder_ == null) {
          return score_.get(index);  } else {
          return scoreBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getScoreOrBuilderList() {
        if (scoreBuilder_ != null) {
          return scoreBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(score_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addScoreBuilder() {
        return getScoreFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addScoreBuilder(
          int index) {
        return getScoreFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse score = 2;</code>
       *
       * <pre>
       *每局用户的成绩
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getScoreBuilderList() {
        return getScoreFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getScoreFieldBuilder() {
        if (scoreBuilder_ == null) {
          scoreBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  score_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          score_ = null;
        }
        return scoreBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:schcp.PlayerResultSchcp)
    }

    static {
      defaultInstance = new PlayerResultSchcp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:schcp.PlayerResultSchcp)
  }

  public interface PukeGameEndSchcpOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .Int32ArrayResponse zhao_card = 1;
    /**
     * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
     *
     * <pre>
     *召过的牌
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getZhaoCardList();
    /**
     * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
     *
     * <pre>
     *召过的牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getZhaoCard(int index);
    /**
     * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
     *
     * <pre>
     *召过的牌
     * </pre>
     */
    int getZhaoCardCount();
    /**
     * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
     *
     * <pre>
     *召过的牌
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getZhaoCardOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
     *
     * <pre>
     *召过的牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getZhaoCardOrBuilder(
        int index);

    // optional .schcp.PlayerResultSchcp player_result = 2;
    /**
     * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
     *
     * <pre>
     *总结算数据
     * </pre>
     */
    boolean hasPlayerResult();
    /**
     * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
     *
     * <pre>
     *总结算数据
     * </pre>
     */
    protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp getPlayerResult();
    /**
     * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
     *
     * <pre>
     *总结算数据
     * </pre>
     */
    protobuf.clazz.schcp.schcpRsp.PlayerResultSchcpOrBuilder getPlayerResultOrBuilder();
  }
  /**
   * Protobuf type {@code schcp.PukeGameEndSchcp}
   */
  public static final class PukeGameEndSchcp extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndSchcpOrBuilder {
    // Use PukeGameEndSchcp.newBuilder() to construct.
    private PukeGameEndSchcp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndSchcp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndSchcp defaultInstance;
    public static PukeGameEndSchcp getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndSchcp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndSchcp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                zhaoCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              zhaoCard_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = playerResult_.toBuilder();
              }
              playerResult_ = input.readMessage(protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerResult_);
                playerResult_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          zhaoCard_ = java.util.Collections.unmodifiableList(zhaoCard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.schcp.schcpRsp.internal_static_schcp_PukeGameEndSchcp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.schcp.schcpRsp.internal_static_schcp_PukeGameEndSchcp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp.class, protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndSchcp> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndSchcp>() {
      public PukeGameEndSchcp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndSchcp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndSchcp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .Int32ArrayResponse zhao_card = 1;
    public static final int ZHAO_CARD_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> zhaoCard_;
    /**
     * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
     *
     * <pre>
     *召过的牌
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getZhaoCardList() {
      return zhaoCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
     *
     * <pre>
     *召过的牌
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getZhaoCardOrBuilderList() {
      return zhaoCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
     *
     * <pre>
     *召过的牌
     * </pre>
     */
    public int getZhaoCardCount() {
      return zhaoCard_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
     *
     * <pre>
     *召过的牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getZhaoCard(int index) {
      return zhaoCard_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
     *
     * <pre>
     *召过的牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getZhaoCardOrBuilder(
        int index) {
      return zhaoCard_.get(index);
    }

    // optional .schcp.PlayerResultSchcp player_result = 2;
    public static final int PLAYER_RESULT_FIELD_NUMBER = 2;
    private protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp playerResult_;
    /**
     * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
     *
     * <pre>
     *总结算数据
     * </pre>
     */
    public boolean hasPlayerResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
     *
     * <pre>
     *总结算数据
     * </pre>
     */
    public protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp getPlayerResult() {
      return playerResult_;
    }
    /**
     * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
     *
     * <pre>
     *总结算数据
     * </pre>
     */
    public protobuf.clazz.schcp.schcpRsp.PlayerResultSchcpOrBuilder getPlayerResultOrBuilder() {
      return playerResult_;
    }

    private void initFields() {
      zhaoCard_ = java.util.Collections.emptyList();
      playerResult_ = protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < zhaoCard_.size(); i++) {
        output.writeMessage(1, zhaoCard_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, playerResult_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < zhaoCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, zhaoCard_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, playerResult_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code schcp.PukeGameEndSchcp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcpOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.schcp.schcpRsp.internal_static_schcp_PukeGameEndSchcp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.schcp.schcpRsp.internal_static_schcp_PukeGameEndSchcp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp.class, protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp.Builder.class);
      }

      // Construct using protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getZhaoCardFieldBuilder();
          getPlayerResultFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (zhaoCardBuilder_ == null) {
          zhaoCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          zhaoCardBuilder_.clear();
        }
        if (playerResultBuilder_ == null) {
          playerResult_ = protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.getDefaultInstance();
        } else {
          playerResultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.schcp.schcpRsp.internal_static_schcp_PukeGameEndSchcp_descriptor;
      }

      public protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp getDefaultInstanceForType() {
        return protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp.getDefaultInstance();
      }

      public protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp build() {
        protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp buildPartial() {
        protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp result = new protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (zhaoCardBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            zhaoCard_ = java.util.Collections.unmodifiableList(zhaoCard_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.zhaoCard_ = zhaoCard_;
        } else {
          result.zhaoCard_ = zhaoCardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (playerResultBuilder_ == null) {
          result.playerResult_ = playerResult_;
        } else {
          result.playerResult_ = playerResultBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp) {
          return mergeFrom((protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp other) {
        if (other == protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp.getDefaultInstance()) return this;
        if (zhaoCardBuilder_ == null) {
          if (!other.zhaoCard_.isEmpty()) {
            if (zhaoCard_.isEmpty()) {
              zhaoCard_ = other.zhaoCard_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureZhaoCardIsMutable();
              zhaoCard_.addAll(other.zhaoCard_);
            }
            onChanged();
          }
        } else {
          if (!other.zhaoCard_.isEmpty()) {
            if (zhaoCardBuilder_.isEmpty()) {
              zhaoCardBuilder_.dispose();
              zhaoCardBuilder_ = null;
              zhaoCard_ = other.zhaoCard_;
              bitField0_ = (bitField0_ & ~0x00000001);
              zhaoCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getZhaoCardFieldBuilder() : null;
            } else {
              zhaoCardBuilder_.addAllMessages(other.zhaoCard_);
            }
          }
        }
        if (other.hasPlayerResult()) {
          mergePlayerResult(other.getPlayerResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.schcp.schcpRsp.PukeGameEndSchcp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Int32ArrayResponse zhao_card = 1;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> zhaoCard_ =
        java.util.Collections.emptyList();
      private void ensureZhaoCardIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          zhaoCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(zhaoCard_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> zhaoCardBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getZhaoCardList() {
        if (zhaoCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(zhaoCard_);
        } else {
          return zhaoCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public int getZhaoCardCount() {
        if (zhaoCardBuilder_ == null) {
          return zhaoCard_.size();
        } else {
          return zhaoCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getZhaoCard(int index) {
        if (zhaoCardBuilder_ == null) {
          return zhaoCard_.get(index);
        } else {
          return zhaoCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public Builder setZhaoCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (zhaoCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureZhaoCardIsMutable();
          zhaoCard_.set(index, value);
          onChanged();
        } else {
          zhaoCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public Builder setZhaoCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (zhaoCardBuilder_ == null) {
          ensureZhaoCardIsMutable();
          zhaoCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          zhaoCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public Builder addZhaoCard(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (zhaoCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureZhaoCardIsMutable();
          zhaoCard_.add(value);
          onChanged();
        } else {
          zhaoCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public Builder addZhaoCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (zhaoCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureZhaoCardIsMutable();
          zhaoCard_.add(index, value);
          onChanged();
        } else {
          zhaoCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public Builder addZhaoCard(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (zhaoCardBuilder_ == null) {
          ensureZhaoCardIsMutable();
          zhaoCard_.add(builderForValue.build());
          onChanged();
        } else {
          zhaoCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public Builder addZhaoCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (zhaoCardBuilder_ == null) {
          ensureZhaoCardIsMutable();
          zhaoCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          zhaoCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public Builder addAllZhaoCard(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (zhaoCardBuilder_ == null) {
          ensureZhaoCardIsMutable();
          super.addAll(values, zhaoCard_);
          onChanged();
        } else {
          zhaoCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public Builder clearZhaoCard() {
        if (zhaoCardBuilder_ == null) {
          zhaoCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          zhaoCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public Builder removeZhaoCard(int index) {
        if (zhaoCardBuilder_ == null) {
          ensureZhaoCardIsMutable();
          zhaoCard_.remove(index);
          onChanged();
        } else {
          zhaoCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getZhaoCardBuilder(
          int index) {
        return getZhaoCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getZhaoCardOrBuilder(
          int index) {
        if (zhaoCardBuilder_ == null) {
          return zhaoCard_.get(index);  } else {
          return zhaoCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getZhaoCardOrBuilderList() {
        if (zhaoCardBuilder_ != null) {
          return zhaoCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(zhaoCard_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addZhaoCardBuilder() {
        return getZhaoCardFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addZhaoCardBuilder(
          int index) {
        return getZhaoCardFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse zhao_card = 1;</code>
       *
       * <pre>
       *召过的牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getZhaoCardBuilderList() {
        return getZhaoCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getZhaoCardFieldBuilder() {
        if (zhaoCardBuilder_ == null) {
          zhaoCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  zhaoCard_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          zhaoCard_ = null;
        }
        return zhaoCardBuilder_;
      }

      // optional .schcp.PlayerResultSchcp player_result = 2;
      private protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp playerResult_ = protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp, protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.Builder, protobuf.clazz.schcp.schcpRsp.PlayerResultSchcpOrBuilder> playerResultBuilder_;
      /**
       * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
       *
       * <pre>
       *总结算数据
       * </pre>
       */
      public boolean hasPlayerResult() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
       *
       * <pre>
       *总结算数据
       * </pre>
       */
      public protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp getPlayerResult() {
        if (playerResultBuilder_ == null) {
          return playerResult_;
        } else {
          return playerResultBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
       *
       * <pre>
       *总结算数据
       * </pre>
       */
      public Builder setPlayerResult(protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp value) {
        if (playerResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerResult_ = value;
          onChanged();
        } else {
          playerResultBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
       *
       * <pre>
       *总结算数据
       * </pre>
       */
      public Builder setPlayerResult(
          protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.Builder builderForValue) {
        if (playerResultBuilder_ == null) {
          playerResult_ = builderForValue.build();
          onChanged();
        } else {
          playerResultBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
       *
       * <pre>
       *总结算数据
       * </pre>
       */
      public Builder mergePlayerResult(protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp value) {
        if (playerResultBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              playerResult_ != protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.getDefaultInstance()) {
            playerResult_ =
              protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.newBuilder(playerResult_).mergeFrom(value).buildPartial();
          } else {
            playerResult_ = value;
          }
          onChanged();
        } else {
          playerResultBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
       *
       * <pre>
       *总结算数据
       * </pre>
       */
      public Builder clearPlayerResult() {
        if (playerResultBuilder_ == null) {
          playerResult_ = protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.getDefaultInstance();
          onChanged();
        } else {
          playerResultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
       *
       * <pre>
       *总结算数据
       * </pre>
       */
      public protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.Builder getPlayerResultBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPlayerResultFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
       *
       * <pre>
       *总结算数据
       * </pre>
       */
      public protobuf.clazz.schcp.schcpRsp.PlayerResultSchcpOrBuilder getPlayerResultOrBuilder() {
        if (playerResultBuilder_ != null) {
          return playerResultBuilder_.getMessageOrBuilder();
        } else {
          return playerResult_;
        }
      }
      /**
       * <code>optional .schcp.PlayerResultSchcp player_result = 2;</code>
       *
       * <pre>
       *总结算数据
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp, protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.Builder, protobuf.clazz.schcp.schcpRsp.PlayerResultSchcpOrBuilder> 
          getPlayerResultFieldBuilder() {
        if (playerResultBuilder_ == null) {
          playerResultBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp, protobuf.clazz.schcp.schcpRsp.PlayerResultSchcp.Builder, protobuf.clazz.schcp.schcpRsp.PlayerResultSchcpOrBuilder>(
                  playerResult_,
                  getParentForChildren(),
                  isClean());
          playerResult_ = null;
        }
        return playerResultBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:schcp.PukeGameEndSchcp)
    }

    static {
      defaultInstance = new PukeGameEndSchcp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:schcp.PukeGameEndSchcp)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_schcp_PlayerResultSchcp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_schcp_PlayerResultSchcp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_schcp_PukeGameEndSchcp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_schcp_PukeGameEndSchcp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026schcp/schcpProto.proto\022\005schcp\032\024basic/p" +
      "rotocol.proto\"M\n\021PlayerResultSchcp\022\024\n\014pl" +
      "ayer_score\030\001 \003(\005\022\"\n\005score\030\002 \003(\0132\023.Int32A" +
      "rrayResponse\"k\n\020PukeGameEndSchcp\022&\n\tzhao" +
      "_card\030\001 \003(\0132\023.Int32ArrayResponse\022/\n\rplay" +
      "er_result\030\002 \001(\0132\030.schcp.PlayerResultSchc" +
      "pB \n\024protobuf.clazz.schcpB\010schcpRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_schcp_PlayerResultSchcp_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_schcp_PlayerResultSchcp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_schcp_PlayerResultSchcp_descriptor,
              new java.lang.String[] { "PlayerScore", "Score", });
          internal_static_schcp_PukeGameEndSchcp_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_schcp_PukeGameEndSchcp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_schcp_PukeGameEndSchcp_descriptor,
              new java.lang.String[] { "ZhaoCard", "PlayerResult", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
