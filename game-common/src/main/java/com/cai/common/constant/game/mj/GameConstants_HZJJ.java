package com.cai.common.constant.game.mj;

import com.cai.common.constant.GameConstants;

/**
 * 九江红中常量
 * @author WalkerGeek 
 */
public class GameConstants_HZJJ extends GameConstants {

	public static final int GAME_RULE_HZJJ_ZAMA = 1; // 扎码
	public static final int GAME_RULE_ALL_MA1 = 2; // 一码全中
	public static final int GAME_RULE_ALL_MA1_NEW = 3; // 新一码全中
	public static final int GAME_RULE_HZJJ_MA2 = 4; // 2个
	public static final int GAME_RULE_HZJJ_MA3 = 5; // 3个
	public static final int GAME_RULE_HZJJ_MA4 = 6; // 4个
	public static final int GAME_RULE_HZJJ_MA6 = 7;// 6个
	public static final int GAME_RULE_HZJJ_HONGZHONG4 = 8;// 4个红中
	public static final int GAME_RULE_HZJJ_HONGZHONG8 = 9;// 8个红中
	public static final int GAME_RULE_KE_DIAN_PAO = 10;// 可点炮
	//public static final int GAME_RULE_WU_DI = 11;// 无底分
	public static final int GAME_RULE_KE_HU_QI_DUI = 12;// 可胡七对
	public static final int GAME_RULE_QIANG_ZHI_HU = 13; //强制胡牌
	public static final int GAME_RULE_DI1 = 14; // 倍率1
	public static final int GAME_RULE_DI2 = 15; // 倍率2
	public static final int GAME_RULE_DI5 = 16; // 倍率5
	public static final int GAME_RULE_DI3 = 17; // 倍率3
	
	public static final int GAME_RULE_HONGZHONG_JIANG_FENG = 18; //4红中奖分
	public static final int GAME_RULE_HONGZHONG_JIANG_QUANMA = 19; //4奖全码
	public static final int GAME_RULE_HONGZHONG_ONLY_ZIMO= 20; //有红中只自摸
	public static final int GAME_RULE_HONGZHONG_ONLY_DIAO_PAO = 21; //有红中可以点炮
	public static final int GAME_RULE_HONGZHONG_JIANG2 = 22; //4红中奖2分
	public static final int GAME_RULE_HONGZHONG_JIANG5 = 23; //4红中奖5分
	public static final int GAME_RULE_HONGZHONG_JIANG10 = 24; //4红中奖10分
	public static final int GAME_RULE_BU_PIAO = 25; //不飘
	public static final int GAME_RULE_PIAO1 = 26; //飘1
	public static final int GAME_RULE_PIAO2 = 27; //飘2
	public static final int GAME_RULE_PIAO3 = 28; //飘3
	public static final int GAME_RULE_DING_PIAO1 = 29; //定飘1
	public static final int GAME_RULE_DING_PIAO2 = 30; //定飘2
	public static final int GAME_RULE_DING_PIAO3 = 31; //定飘3
	public static final int GAME_RULE_DUI_PIAO = 32; //对飘
	public static final int GAME_RULE_BUDUI_PIAO = 33; //不对飘
	public static final int GAME_RULE_ONE_MIN_TRUSTEE = 34; // 1分钟托管
	
	// 全部的麻将数据
	public static final int CARD_DATA_MAX[] = new int[] { 
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 万子
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 万子
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 万子
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 万子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子

			0x35, 0x35, 0x35, 0x35, // 红中

	};
	
	// 全部的麻将数据
	public static final int CARD_DATA_MAX1[] = new int[] { 
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 万子
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 万子
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 万子
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 万子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子

			0x35, 0x35, 0x35, 0x35, // 红中
			0x35, 0x35, 0x35, 0x35, // 红中

	};
}
