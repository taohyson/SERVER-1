package dbd;
option java_package = "protobuf.clazz.dbd";
option java_outer_classname = "DbdRsp";
import "basic/protocol.proto";
//房间信息
message RoomInfoDbd {
	optional int32 room_id = 1; //房间号
	optional int32 game_type_index = 4; //玩法
	optional int32 game_rule_index = 2; //玩法
	repeated int32 game_rule_index_ex = 12; //附加玩法
	optional string game_rule_des = 3; //玩法说明
	optional int32 game_round = 5;
	optional int32 cur_round = 6;
	optional int32 game_status = 7;
	optional int64 create_player_id = 8;
	optional int32 begin_left_card = 9;
	optional int32 _banker_player = 10; //当前庄家
	optional string create_name = 11; //创建者姓名
}//房间的玩家
message RoomPlayerResponseDbd {
	optional int64 account_id = 1; //账号id
	optional string user_name = 2; //角色名
	optional string head_img_url = 3; //玩家头像
	optional int32 seat_index = 4; //玩家位置索引
	optional string ip = 5; //玩家IP
	optional int32 online = 6; //1在线0断线
	optional int32 sex = 7;
	optional float score = 8;
	optional int32 ready = 9; //0没准备,1准备
	optional string ip_addr = 10; //物理地址
	optional LocationInfor locationInfor = 11;
	optional bool is_trustee = 12; //true托管 false 取消
	optional int64 money = 13; //金币
	optional int64 gold = 14; //闲逸豆
}
//用户出牌
message OutCardData{
	optional int32 out_card_player=1;//出牌玩家
	repeated int32 cards_data = 2;  //出牌数据
	repeated int32 change_cards_data = 3;  //变换之后的数据
	optional int32  cards_count = 4;//出牌数量
	optional int32 card_type = 5;	//出牌类型
	optional int32 cur_player = 6;//当前玩家
	optional int32 cur_player_ya_pai = 7;//0不能压牌，1能压牌
	repeated int32 pr_cards_data = 8;  //上一玩家出牌数据
	repeated int32 pr_change_cards_data = 9;  //变换之后的数据
	optional int32 pr_cards_count = 10;//上一玩家出牌数量
	optional int32 pr_out_card_type = 11;//出牌类型
	optional int32 is_first_out = 12;//是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
	optional int32 display_time = 13; //显示时间
	repeated string difen_bomb_des = 14; //玩法说明
	repeated int32 user_card_count = 15; //扑克数目
	repeated Int32ArrayResponse user_cards_data = 16; //扑克列表
	optional int32 bomb_score = 17;//炸弹分

}
//结算
message PukeGameEndDbd{
	optional RoomInfoDbd room_info = 1;
	optional int32 cur_round = 2; //当前圈数
	optional int32 game_round = 3; //游戏圈数
	repeated int32 card_count = 4; //扑克数目
	repeated Int32ArrayResponse cards_data = 5; //扑克列表
	repeated int32 boom_card_num = 6;//炸弹数量
	repeated Int32ArrayResponse end_score = 7;//结算分数
	optional int32 player_num = 8;//游戏人数
	optional int32 banker_player = 9;//庄家
	optional int32 reason = 10;//结束类型
	repeated int32 chun_tian_player = 11;//春天玩家
	optional int32 di_chi_score = 19;//底池分数
	optional int32 init_di_chi_score = 20;//初始底池
	repeated int32 boom_score = 21;//炸弹分
	repeated int32 di_score = 22;//底分
	repeated int32 bu_tang_score = 23;//开局补堂
	repeated int32 tang_zi_score = 24;//堂分
	repeated int32 cal_score = 25;//单句结算分
	//总结算
	repeated int32 all_boom_card_num = 12;//总炸弹数量
	repeated float all_end_score = 13;//结算总积分
	repeated int32 end_score_max = 14;//单句最高得分
	repeated int32 win_num = 15;//赢句数
	repeated int32 lose_num = 16;//输句数
	repeated RoomPlayerResponseDbd players = 17;
}
message TableResponseDBD {
	//游戏变量
	optional int32 banker_player = 1; //庄家玩家
	optional int32 current_player = 2; //当前玩家
	optional int32 prev_player = 3; //上一玩家
	//状态变量
	repeated bool trustee = 4; //是否托管
	//扑克数据
	repeated Int32ArrayResponse out_cards_data = 5;  //本轮出牌数据
	repeated Int32ArrayResponse out_change_cards_data = 6;  //本轮出牌数据
	repeated int32  out_cards_count = 7;			//本轮牌数量
	repeated int32  player_pass = 8;			//本轮不出数据
	repeated int32 card_type = 9;	//出牌类型
	optional int32 pr_out_card_player=10;//上一出牌玩家
	repeated int32 pr_cards_data = 11;  //上一玩家出牌数据
	repeated int32 pr_change_cards_data = 12;  //上一玩家出牌数据
	optional int32 pr_cards_count = 13;//上一玩家出牌数量
	optional int32 pr_out_card_type = 14;//出牌类型
	optional int32 is_first_out = 15;//是否首出 //0不是首出 1是首出
	optional int32 display_time = 17; //显示时间
	optional RoomInfoDbd room_info = 18;
	repeated RoomPlayerResponseDbd players = 19;
	optional int32 is_current_first_out = 20;
	optional int32 cur_player_ya_pai = 21;//判断能否压牌
	repeated int32 hand_card_count = 22; //扑克数目
	repeated Int32ArrayResponse hand_cards_data = 23; //扑克列表
	repeated int32 user_call_banker_score = 24;//用户叫庄
	optional int32 call_score_max = 25;//叫分上限
	optional int32 call_score_min = 26;//叫分下限
	optional int32 times = 27;//倍数
	optional int32 di_card_count = 28; //底牌扑克数目
	repeated int32 di_cards_data = 29; //底牌扑克列表
	optional int32 di_chi_score = 30;//底池分数
	optional int32 tang_zi_score = 31;//堂子分数
	optional int32 bomb_score = 32;//炸弹分
	optional int32 banker_score = 16;//叫分
	optional int32 call_score_current = 33;
}
message GameStartDBD{
	optional RoomInfoDbd room_info = 1;
	repeated int32 card_count = 2; //扑克数目
	repeated Int32ArrayResponse cards_data = 3; //扑克列表
	repeated RoomPlayerResponseDbd players = 4;
	optional int32 di_pai_card_count = 5; //底牌扑克数目
	optional int32 display_time = 6; //显示时间
	optional int32 times = 7;//倍数
}
message ReDispath{
	repeated int32 card_count = 1; //扑克数目
	repeated Int32ArrayResponse cards_data = 2; //扑克列表
}

//叫庄结果
message CallBankerResult{
	optional int32 call_player = 1; //叫庄用户
	optional int32 banker_player = 2;//庄家
	optional int32 current_player = 9;
	optional int32 call_score = 11;//当前叫庄分数
	optional int32 call_score_max = 3;//叫分上限
	optional int32 call_score_min = 10;//叫分下限
	optional int32 card_count = 4; //底牌扑克数目
	repeated int32 cards_data = 5; //底牌扑克列表
	optional int32 cards_type = 6; //底牌类型
	repeated int32 user_card_count = 7; //扑克数目
	repeated Int32ArrayResponse user_cards_data = 8; //扑克列表
	optional int32 display_time = 12; //显示时间
	optional int32 times = 13;//倍数
	optional int32 di_chi_score = 14;//底池分数
	optional int32 tang_zi_score = 15;//堂子分数
	optional int32 banker_score = 16;//当局叫分
	optional int32 call_score_current = 17;
}


//用户出牌
message OutCardData_Request_DBD{
	repeated int32 out_cards = 1;//所出的牌
	optional int32 out_card_count = 2;//出牌的数量
	repeated int32 change_out_cards = 3;//所出的牌
	optional int32 b_out_card_type = 4; //是否出牌 0 不出 ，带 出牌类型
}
message Call_Banker_DBD_Request{
	optional int32 select_call_banker_score = 1 ;
}